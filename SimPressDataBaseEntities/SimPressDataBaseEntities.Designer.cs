//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SimPressDataBaseModel", "FK_Comments_Presentations", "Presentations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimPressDataBaseEntities.Presentations), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimPressDataBaseEntities.Comments), true)]
[assembly: EdmRelationshipAttribute("SimPressDataBaseModel", "FK_Comments_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimPressDataBaseEntities.Users), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimPressDataBaseEntities.Comments), true)]
[assembly: EdmRelationshipAttribute("SimPressDataBaseModel", "FK_Likes_Presentations", "Presentations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimPressDataBaseEntities.Presentations), "Likes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimPressDataBaseEntities.Likes), true)]
[assembly: EdmRelationshipAttribute("SimPressDataBaseModel", "FK_Likes_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimPressDataBaseEntities.Users), "Likes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimPressDataBaseEntities.Likes), true)]
[assembly: EdmRelationshipAttribute("SimPressDataBaseModel", "FK_Presentations_Presentations", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimPressDataBaseEntities.Users), "Presentations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimPressDataBaseEntities.Presentations), true)]

#endregion

namespace SimPressDataBaseEntities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SimPressDataBaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SimPressDataBaseEntities object using the connection string found in the 'SimPressDataBaseEntities' section of the application configuration file.
        /// </summary>
        public SimPressDataBaseEntities() : base("name=SimPressDataBaseEntities", "SimPressDataBaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SimPressDataBaseEntities object.
        /// </summary>
        public SimPressDataBaseEntities(string connectionString) : base(connectionString, "SimPressDataBaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SimPressDataBaseEntities object.
        /// </summary>
        public SimPressDataBaseEntities(EntityConnection connection) : base(connection, "SimPressDataBaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comments> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comments>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comments> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Likes> Likes
        {
            get
            {
                if ((_Likes == null))
                {
                    _Likes = base.CreateObjectSet<Likes>("Likes");
                }
                return _Likes;
            }
        }
        private ObjectSet<Likes> _Likes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Presentations> Presentations
        {
            get
            {
                if ((_Presentations == null))
                {
                    _Presentations = base.CreateObjectSet<Presentations>("Presentations");
                }
                return _Presentations;
            }
        }
        private ObjectSet<Presentations> _Presentations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comments comments)
        {
            base.AddObject("Comments", comments);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Likes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLikes(Likes likes)
        {
            base.AddObject("Likes", likes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Presentations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPresentations(Presentations presentations)
        {
            base.AddObject("Presentations", presentations);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimPressDataBaseModel", Name="Comments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comments : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comments object.
        /// </summary>
        /// <param name="commentId">Initial value of the CommentId property.</param>
        /// <param name="presentationId">Initial value of the PresentationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Comments CreateComments(global::System.Guid commentId, global::System.Guid presentationId, global::System.Guid userId, global::System.String text, global::System.DateTime createDate)
        {
            Comments comments = new Comments();
            comments.CommentId = commentId;
            comments.PresentationId = presentationId;
            comments.UserId = userId;
            comments.Text = text;
            comments.CreateDate = createDate;
            return comments;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CommentId
        {
            get
            {
                return _CommentId;
            }
            set
            {
                if (_CommentId != value)
                {
                    OnCommentIdChanging(value);
                    ReportPropertyChanging("CommentId");
                    _CommentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommentId");
                    OnCommentIdChanged();
                }
            }
        }
        private global::System.Guid _CommentId;
        partial void OnCommentIdChanging(global::System.Guid value);
        partial void OnCommentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PresentationId
        {
            get
            {
                return _PresentationId;
            }
            set
            {
                OnPresentationIdChanging(value);
                ReportPropertyChanging("PresentationId");
                _PresentationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationId");
                OnPresentationIdChanged();
            }
        }
        private global::System.Guid _PresentationId;
        partial void OnPresentationIdChanging(global::System.Guid value);
        partial void OnPresentationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPressDataBaseModel", "FK_Comments_Presentations", "Presentations")]
        public Presentations Presentations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Presentations>("SimPressDataBaseModel.FK_Comments_Presentations", "Presentations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Presentations>("SimPressDataBaseModel.FK_Comments_Presentations", "Presentations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Presentations> PresentationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Presentations>("SimPressDataBaseModel.FK_Comments_Presentations", "Presentations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Presentations>("SimPressDataBaseModel.FK_Comments_Presentations", "Presentations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPressDataBaseModel", "FK_Comments_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimPressDataBaseModel.FK_Comments_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimPressDataBaseModel.FK_Comments_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimPressDataBaseModel.FK_Comments_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("SimPressDataBaseModel.FK_Comments_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimPressDataBaseModel", Name="Likes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Likes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Likes object.
        /// </summary>
        /// <param name="likeId">Initial value of the LikeId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="presentationId">Initial value of the PresentationId property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Likes CreateLikes(global::System.Guid likeId, global::System.Guid userId, global::System.Guid presentationId, global::System.DateTime createDate)
        {
            Likes likes = new Likes();
            likes.LikeId = likeId;
            likes.UserId = userId;
            likes.PresentationId = presentationId;
            likes.CreateDate = createDate;
            return likes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LikeId
        {
            get
            {
                return _LikeId;
            }
            set
            {
                if (_LikeId != value)
                {
                    OnLikeIdChanging(value);
                    ReportPropertyChanging("LikeId");
                    _LikeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LikeId");
                    OnLikeIdChanged();
                }
            }
        }
        private global::System.Guid _LikeId;
        partial void OnLikeIdChanging(global::System.Guid value);
        partial void OnLikeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PresentationId
        {
            get
            {
                return _PresentationId;
            }
            set
            {
                OnPresentationIdChanging(value);
                ReportPropertyChanging("PresentationId");
                _PresentationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationId");
                OnPresentationIdChanged();
            }
        }
        private global::System.Guid _PresentationId;
        partial void OnPresentationIdChanging(global::System.Guid value);
        partial void OnPresentationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPressDataBaseModel", "FK_Likes_Presentations", "Presentations")]
        public Presentations Presentations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Presentations>("SimPressDataBaseModel.FK_Likes_Presentations", "Presentations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Presentations>("SimPressDataBaseModel.FK_Likes_Presentations", "Presentations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Presentations> PresentationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Presentations>("SimPressDataBaseModel.FK_Likes_Presentations", "Presentations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Presentations>("SimPressDataBaseModel.FK_Likes_Presentations", "Presentations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPressDataBaseModel", "FK_Likes_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimPressDataBaseModel.FK_Likes_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimPressDataBaseModel.FK_Likes_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimPressDataBaseModel.FK_Likes_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("SimPressDataBaseModel.FK_Likes_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimPressDataBaseModel", Name="Presentations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Presentations : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Presentations object.
        /// </summary>
        /// <param name="presentationId">Initial value of the PresentationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Presentations CreatePresentations(global::System.Guid presentationId, global::System.Guid userId, global::System.String name, global::System.DateTime createDate)
        {
            Presentations presentations = new Presentations();
            presentations.PresentationId = presentationId;
            presentations.UserId = userId;
            presentations.Name = name;
            presentations.CreateDate = createDate;
            return presentations;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PresentationId
        {
            get
            {
                return _PresentationId;
            }
            set
            {
                if (_PresentationId != value)
                {
                    OnPresentationIdChanging(value);
                    ReportPropertyChanging("PresentationId");
                    _PresentationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PresentationId");
                    OnPresentationIdChanged();
                }
            }
        }
        private global::System.Guid _PresentationId;
        partial void OnPresentationIdChanging(global::System.Guid value);
        partial void OnPresentationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tags
        {
            get
            {
                return _Tags;
            }
            set
            {
                OnTagsChanging(value);
                ReportPropertyChanging("Tags");
                _Tags = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tags");
                OnTagsChanged();
            }
        }
        private global::System.String _Tags;
        partial void OnTagsChanging(global::System.String value);
        partial void OnTagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SlidesJSON
        {
            get
            {
                return _SlidesJSON;
            }
            set
            {
                OnSlidesJSONChanging(value);
                ReportPropertyChanging("SlidesJSON");
                _SlidesJSON = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SlidesJSON");
                OnSlidesJSONChanged();
            }
        }
        private global::System.String _SlidesJSON;
        partial void OnSlidesJSONChanging(global::System.String value);
        partial void OnSlidesJSONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPressDataBaseModel", "FK_Comments_Presentations", "Comments")]
        public EntityCollection<Comments> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comments>("SimPressDataBaseModel.FK_Comments_Presentations", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comments>("SimPressDataBaseModel.FK_Comments_Presentations", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPressDataBaseModel", "FK_Likes_Presentations", "Likes")]
        public EntityCollection<Likes> Likes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Likes>("SimPressDataBaseModel.FK_Likes_Presentations", "Likes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Likes>("SimPressDataBaseModel.FK_Likes_Presentations", "Likes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPressDataBaseModel", "FK_Presentations_Presentations", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimPressDataBaseModel.FK_Presentations_Presentations", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimPressDataBaseModel.FK_Presentations_Presentations", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimPressDataBaseModel.FK_Presentations_Presentations", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("SimPressDataBaseModel.FK_Presentations_Presentations", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimPressDataBaseModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="passwordHash">Initial value of the PasswordHash property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="info">Initial value of the Info property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Users CreateUsers(global::System.Guid userId, global::System.String login, global::System.String email, global::System.String passwordHash, global::System.String passwordSalt, global::System.String info, global::System.Boolean isApproved, global::System.String role, global::System.DateTime createDate)
        {
            Users users = new Users();
            users.UserId = userId;
            users.Login = login;
            users.Email = email;
            users.PasswordHash = passwordHash;
            users.PasswordSalt = passwordSalt;
            users.Info = info;
            users.IsApproved = isApproved;
            users.Role = role;
            users.CreateDate = createDate;
            return users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Info
        {
            get
            {
                return _Info;
            }
            set
            {
                OnInfoChanging(value);
                ReportPropertyChanging("Info");
                _Info = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Info");
                OnInfoChanged();
            }
        }
        private global::System.String _Info;
        partial void OnInfoChanging(global::System.String value);
        partial void OnInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPressDataBaseModel", "FK_Comments_Users", "Comments")]
        public EntityCollection<Comments> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comments>("SimPressDataBaseModel.FK_Comments_Users", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comments>("SimPressDataBaseModel.FK_Comments_Users", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPressDataBaseModel", "FK_Likes_Users", "Likes")]
        public EntityCollection<Likes> Likes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Likes>("SimPressDataBaseModel.FK_Likes_Users", "Likes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Likes>("SimPressDataBaseModel.FK_Likes_Users", "Likes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPressDataBaseModel", "FK_Presentations_Presentations", "Presentations")]
        public EntityCollection<Presentations> Presentations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Presentations>("SimPressDataBaseModel.FK_Presentations_Presentations", "Presentations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Presentations>("SimPressDataBaseModel.FK_Presentations_Presentations", "Presentations", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
